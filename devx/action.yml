name: 'Setup IOG devx'
description: 'Adds a `devx` shell includes `ghc` and `cabal`'
inputs:
  platform:
    description: 'One of x86_64-linux, x86_64-darwin, aarch64-linux, aarch64-darwin'
    default: 'x86_64-linux'

  target-platform:
    description: 'One of "" (native), "-static", "-windows" or "-js"'
    default: ''

  compiler-nix-name:
    description: 'The version of GHC to use'
    default: 'ghc961'

  minimal:
    description: 'Set to `false` to get hlint and hls'
    default: true

  iog:
    description: 'Set to `true` to get libsodum, libsecp256k1 and libblst'
    default: false

runs:
  using: "composite"
  steps:
    - name: Install Nix with good defaults
      uses: cachix/install-nix-action@v22
      with:
        extra_nix_config: |
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= loony-tools:pr9m4BkM/5/eSTZlkQyRt57Jz7OMBxNSUiMC4FkcNfk= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
          substituters = https://cache.iog.io/ https://cache.zw3rk.com/ https://cache.nixos.org/
        nix_path: nixpkgs=channel:nixos-unstable
    - name: Install jq
      shell: bash
      run: |
        curl -L https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 -o jq
        chmod +x jq
    - name: Download and import closure
      shell: bash
      run: |
        ${{ github.action_path }}/support/fetch-docker.sh input-output-hk/devx ${{ inputs.platform }}.${{ inputs.compiler-nix-name }}${{ inputs.target-platform }}${{ inputs.minimal && '-minimal' || '' }}${{ inputs.iog && '-iog' || '' }}-env | zstd -d | nix-store --import | tee store-paths.txt
        sudo ln -s $(tail -n 1 store-paths.txt) /usr/local/bin/devx
